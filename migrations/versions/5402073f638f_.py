"""empty message

Revision ID: 5402073f638f
Revises: 94040008b253
Create Date: 2021-11-30 11:42:16.315198

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5402073f638f'
down_revision = '94040008b253'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=True),
    sa.Column('validated', sa.Boolean(), nullable=True),
    sa.Column('certification_name', sa.String(length=256), nullable=True),
    sa.Column('certification_path', sa.String(length=256), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certifications'))
    )
    op.create_table('professors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('id_number', sa.String(length=18), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=32), nullable=True),
    sa.Column('last_name', sa.String(length=32), nullable=True),
    sa.Column('college', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id', 'teacher_id', name=op.f('pk_professors'))
    )
    with op.batch_alter_table('professors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_professors_role_id'), ['role_id'], unique=False)

    op.drop_table('organizations')
    op.drop_table('collect')
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.drop_index('ix_transaction_timestamp')

    op.drop_table('transaction')
    op.drop_table('want')
    with op.batch_alter_table('resumes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('message', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('resume_name', sa.String(length=256), nullable=True))
        batch_op.add_column(sa.Column('resume_path', sa.String(length=256), nullable=True))
        batch_op.create_index(batch_op.f('ix_resumes_status'), ['status'], unique=False)
        batch_op.drop_column('filename')
        batch_op.drop_column('body')

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('first_name', sa.String(length=32), nullable=True))
        batch_op.add_column(sa.Column('last_name', sa.String(length=32), nullable=True))
        batch_op.add_column(sa.Column('college', sa.String(length=256), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_column('college')
        batch_op.drop_column('last_name')
        batch_op.drop_column('first_name')

    with op.batch_alter_table('resumes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('body', sa.TEXT(), nullable=False))
        batch_op.add_column(sa.Column('filename', sa.VARCHAR(length=64), nullable=False))
        batch_op.drop_index(batch_op.f('ix_resumes_status'))
        batch_op.drop_column('resume_path')
        batch_op.drop_column('resume_name')
        batch_op.drop_column('message')
        batch_op.drop_column('status')

    op.create_table('want',
    sa.Column('wanter_id', sa.INTEGER(), nullable=False),
    sa.Column('wanted_Activity_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['wanted_Activity_id'], ['Activity.id'], ),
    sa.ForeignKeyConstraint(['wanter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('wanter_id', 'wanted_Activity_id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.Column('item_name', sa.VARCHAR(length=64), nullable=False),
    sa.Column('item_describe', sa.TEXT(), nullable=False),
    sa.Column('link', sa.TEXT(), nullable=False),
    sa.Column('transaction_mode', sa.VARCHAR(length=64), nullable=False),
    sa.Column('is_sold', sa.BOOLEAN(), nullable=True),
    sa.Column('seller_WeChat', sa.TEXT(), nullable=False),
    sa.Column('seller_id', sa.INTEGER(), nullable=True),
    sa.CheckConstraint('is_sold IN (0, 1)'),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('transaction', schema=None) as batch_op:
        batch_op.create_index('ix_transaction_timestamp', ['timestamp'], unique=False)

    op.create_table('collect',
    sa.Column('collecter_id', sa.INTEGER(), nullable=False),
    sa.Column('collected_transaction_id', sa.INTEGER(), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['collected_transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['collecter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('collecter_id', 'collected_transaction_id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('confirmed', sa.BOOLEAN(), nullable=True),
    sa.Column('name', sa.VARCHAR(length=64), nullable=True),
    sa.Column('teacher', sa.VARCHAR(length=128), nullable=True),
    sa.Column('leader_student', sa.VARCHAR(length=128), nullable=True),
    sa.Column('phone', sa.VARCHAR(length=128), nullable=True),
    sa.Column('college', sa.VARCHAR(length=256), nullable=True),
    sa.Column('email', sa.VARCHAR(length=64), nullable=True),
    sa.CheckConstraint('confirmed IN (0, 1)'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('professors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_professors_role_id'))

    op.drop_table('professors')
    op.drop_table('certifications')
    # ### end Alembic commands ###
